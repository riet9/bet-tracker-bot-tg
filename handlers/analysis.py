from telegram import Update
from telegram.constants import ParseMode
from telegram.ext import ContextTypes
from collections import Counter
from utils.storage import get_user
from utils.auth import require_auth

# /top_teams ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –∫–æ–º–∞–Ω–¥ –ø–æ —Å—Ç–∞–≤–∫–∞–º
async def top_teams(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_user(str(update.effective_chat.id))
    completed = [b for b in user["bets"] if b["status"] in ("win", "lose")]
    matches = [b["match"] for b in completed]

    teams = []
    for match in matches:
        parts = match.split(" vs ")
        if len(parts) == 2:
            teams.extend(parts)

    counter = Counter(teams)
    most_common = counter.most_common(5)

    if not most_common:
        await update.message.reply_text("üì≠ –ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return

    msg = "üìä <b>–¢–æ–ø –∫–æ–º–∞–Ω–¥ –ø–æ —Å—Ç–∞–≤–∫–∞–º:</b>\n\n"
    for i, (team, count) in enumerate(most_common, 1):
        team_wins = sum(1 for b in completed if team in b["match"] and b["status"] == "win")
        msg += f"{i}. {team} ‚Äî {count} —Å—Ç–∞–≤–æ–∫ ({team_wins} –ø–æ–±–µ–¥)\n"

    await update.message.reply_text(msg, parse_mode="HTML")

# /review ‚Äî –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 —Å—Ç–∞–≤–æ–∫
async def review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = get_user(str(update.effective_chat.id))
    last_bets = [b for b in user["bets"] if b["status"] in ("win", "lose")][-10:]


    if not last_bets:
        await update.message.reply_text("üì≠ –ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return

    value_count = sum(1 for b in last_bets if b.get("type") == "value")
    safe_count = sum(1 for b in last_bets if b.get("type") == "safe")
    avg_coeff = sum(b["coeff"] for b in last_bets) / len(last_bets)
    winrate = sum(1 for b in last_bets if b["status"] == "win") / len(last_bets) * 100

    risky_bets = [b for b in last_bets if b["amount"] > 0.3 * user["banks"].get(b["source"], 0)]

    msg = (
        f"üìä <b>–ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö {len(last_bets)} —Å—Ç–∞–≤–æ–∫:</b>\n"
        f"- #value: {value_count} | #safe: {safe_count}\n"
        f"- –°—Ä–µ–¥–Ω–∏–π –∫—ç—Ñ: {avg_coeff:.2f}\n"
        f"- Winrate: {winrate:.1f}%\n\n"
    )

    if value_count > safe_count:
        msg += "üß† <b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è #value –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∏–±—ã–ª—å–Ω–µ–µ</b>\n"
    elif safe_count > value_count:
        msg += "üß† <b>–¢—ã —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å #safe —Å—Ç–∞–≤–∫–∏ ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</b>\n"
    else:
        msg += "üß† <b>–ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É #safe –∏ #value</b>\n"

    if risky_bets:
        msg += f"‚ö†Ô∏è {len(risky_bets)} —Å—Ç–∞–≤–æ–∫ –±—ã–ª–∏ –Ω–∞ 30%+ –æ—Ç –±–∞–Ω–∫–∞ ‚Äî –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –±–∞–Ω–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç.\n"

    await update.message.reply_text(msg, parse_mode="HTML")
