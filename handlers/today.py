from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import ContextTypes
from datetime import datetime
from utils.storage import get_user
from utils.timezone import LATVIA_TZ

# /today ‚Äî –≤—Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ChatGPT
async def today(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text or ''
    lines = text.splitlines()

    if context.user_data.get('awaiting_today_input'):
        context.user_data.pop('awaiting_today_input', None)
        start_idx = next((i for i, l in enumerate(lines) if '@' in l), 0)
        await process_today_lines(update, context, lines[start_idx:])
        return

    if len(lines) == 1:
        context.user_data['awaiting_today_input'] = True
        await update.message.reply_text('üì• –í—Å—Ç–∞–≤—å –ø—Ä–æ–≥–Ω–æ–∑ (—Å–ø–∏—Å–æ–∫ —Å—Ç–∞–≤–æ–∫), –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.')
        return

    lines = lines[1:]
    if len(lines) < 2:
        await update.message.reply_text('‚ö†Ô∏è –í—Å—Ç–∞–≤—å –ø—Ä–æ–≥–Ω–æ–∑ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n–ú–∞—Ç—á ‚Äì –∏—Å—Ö–æ–¥ @–∫–æ—ç—Ñ\n–ü–æ—è—Å–Ω–µ–Ω–∏–µ')
        return

    await process_today_lines(update, context, lines)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def format_entries(lines: list[str]) -> str:
    safe, value = [], []
    i = 0
    while i < len(lines):
        line = lines[i].strip()
        if '@' not in line:
            i += 1
            continue
        explanation = start_time = end_time = deadline = stake = ''
        if i+1 < len(lines) and '@' not in lines[i+1]:
            explanation = lines[i+1].strip(); i += 1
        for _ in range(4):
            if i+1 >= len(lines): break
            nl = lines[i+1].strip(); ll = nl.lower()
            if ll.startswith('–Ω–∞—á–∞–ª–æ:'): start_time = nl
            elif ll.startswith('–æ–∫–æ–Ω—á–∞–Ω–∏–µ:') or ll.startswith('–æ–∫–æ–Ω—á:'): end_time = nl
            elif ll.startswith('—Å—Ç–∞–≤–∏—Ç—å –¥–æ:') or ll.startswith('–¥–æ:'): deadline = nl
            elif ll.startswith('—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞:'): stake = nl
            else: break
            i += 1
        try: coeff = float(line.split('@')[-1].strip())
        except: coeff = None
        entry = line
        if explanation: entry += f"\nüí¨ {explanation}"
        if start_time: entry += f"\n‚è∞ {start_time}"
        if end_time: entry += f"\n‚è≥ {end_time}"
        if deadline: entry += f"\nüïì {deadline}"
        if stake: entry += f"\nüíµ {stake}"
        if coeff:
            if coeff <= 1.20 and len(safe) < 2: safe.append(entry)
            elif 1.60 <= coeff <= 2.50 and len(value) < 5: value.append(entry)
        i += 1

    msg = 'üìÖ <b>–°—Ç–∞–≤–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n\n'
    if safe:
        msg += '<b>#safe:</b>\n' + ''.join(f"{idx}. {e}\n\n" for idx,e in enumerate(safe,1))
    if value:
        msg += '<b>#value:</b>\n' + ''.join(f"{idx}. {e}\n\n" for idx,e in enumerate(value,1))
    total = len(safe) + len(value)
    forms = ('—Å—Ç–∞–≤–∫–∞','—Å—Ç–∞–≤–∫–∏','—Å—Ç–∞–≤–æ–∫')
    suffix = forms[0] if total%10==1 and total%100!=11 else forms[1] if 2<=total%10<=4 and not 12<=total%100<=14 else forms[2]
    msg += f"üí∞ –í—Å–µ–≥–æ: {total} {suffix}"
    if not safe and not value:
        return '‚ö†Ô∏è –ù–∏ –æ–¥–Ω–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ñ–æ—Ä–º–∞—Ç –∏–∑ –ø—Ä–æ–º–ø—Ç–∞.'
    return msg

# /process_today_lines ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫
async def process_today_lines(update: Update, context: ContextTypes.DEFAULT_TYPE, lines: list[str]):
    response = format_entries(lines)
    await update.message.reply_text(
        response,
        parse_mode=ParseMode.HTML if response.startswith('üìÖ') else None
    )

# /prompt ‚Äî –≤—ã–±–æ—Ä —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏–ª–∏ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
async def prompt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton('üåÖ –£—Ç—Ä–µ–Ω–Ω–∏–π –ø—Ä–æ–º–ø—Ç', callback_data='prompt_morning')],
        [InlineKeyboardButton('üåô –í–µ—á–µ—Ä–Ω–∏–π –ø—Ä–æ–º–ø—Ç', callback_data='prompt_evening')]
    ]
    await update.message.reply_text(
        '–í—ã–±–µ—Ä–∏ –ø—Ä–æ–º–ø—Ç –¥–ª—è ChatGPT:',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ–º–ø—Ç–æ–≤
async def prompt_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query; await query.answer()
    chat_id = str(query.message.chat.id)
    user = get_user(chat_id); banks = user.get('banks', {})
    today = datetime.now(LATVIA_TZ).strftime('%d.%m.%Y')

    if query.data == 'prompt_morning':
        text = (
            "–Ø —Ä–∞–∑–±–∏—Ä–∞—é—Å—å —Ç–æ–ª—å–∫–æ –≤ —Ñ—É—Ç–±–æ–ª–µ, —Ö–æ–∫–∫–µ–µ –∏ CS2.\n\n"
            f"–ù–∞–π–¥–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ({today}):\n"
            " ‚Ä¢ 1‚Äì2 –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–¥—ë–∂–Ω—ã–µ #safe (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã 1.10‚Äì1.25),\n"
            " ‚Ä¢ –¥–æ 5 –ª–æ–≥–∏—á–Ω—ã—Ö #value (1.60‚Äì2.80),\n"
            " ‚Ä¢ –º–∞–∫—Å–∏–º—É–º 2 –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ #sharp (2.80‚Äì3.50) –∏–ª–∏ #wildcard (3.50+).\n\n"
            "–ù–∞—á–∏–Ω–∞–π —Å –º–∞—Ç—á–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞—Ä—Ç—É—é—Ç —Å 06:00 –ø–æ –†–∏–≥–µ –∏ –ø–æ–∑–∂–µ.\n\n"
            "–ò—â–∏ –ø–æ –≤—Å–µ–º –≤–∏–¥–∞–º —Å–ø–æ—Ä—Ç–∞ –∏ –ª–∏–≥–∞–º: CS2, —Ñ—É—Ç–±–æ–ª, —Ö–æ–∫–∫–µ–π, —Ç–µ–Ω–Ω–∏—Å, –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å, –≤–æ–ª–µ–π–±–æ–ª, –±–∞—Å–∫–µ—Ç–±–æ–ª, –≥–∞–Ω–¥–±–æ–ª, Dota, LoL, Valorant, Rocket League –∏ –¥—Ä—É–≥–∏–º. –ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Å—è —Ç–æ–ø-—Ç—É—Ä–Ω–∏—Ä–∞–º–∏ –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ª–∏–≥–∞–º–∏.\n\n"
            "–Ø –¥–æ–≤–µ—Ä—è—é —Å–∏—Å—Ç–µ–º–µ. –ì–æ—Ç–æ–≤ —Å—Ç–∞–≤–∏—Ç—å –¥–∞–∂–µ –Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —Ä–∞–∑–±–∏—Ä–∞—é—Å—å, –µ—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∞ –∏ –∏–º–µ–µ—Ç value.\n\n"
            "–¶–µ–ª—å: –≤—ã—Ä–∞—Å—Ç–∏—Ç—å –±–∞–Ω–∫ –¥–æ ‚Ç¨800.\n"
            "–ì–æ—Ç–æ–≤ —Å—Ç–∞–≤–∏—Ç—å –¥–æ 70% –±–∞–Ω–∫–∞ –≤ –¥–µ–Ω—å, –µ—Å–ª–∏ value —è–≤–Ω–æ –æ–ø—Ä–∞–≤–¥–∞–Ω–æ.\n\n"
            "–ë–∞–Ω–∫:\n"
            f" ‚Ä¢ Optibet: ‚Ç¨{banks.get('optibet',0):.2f}\n"
            f" ‚Ä¢ Olybet:  ‚Ç¨{banks.get('olybet',0):.2f}\n\n"
            "–§–æ—Ä–º–∞—Ç –∫–∞–∂–¥–æ–π —Å—Ç–∞–≤–∫–∏:\n"
            "–ö–æ–º–∞–Ω–¥–∞1 vs –ö–æ–º–∞–Ω–¥–∞2 ‚Äì –∏—Å—Ö–æ–¥ @–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç  \n"
            "–ö—Ä–∞—Ç–∫–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É —Å—Ç–∞–≤–∫–∞ –ª–æ–≥–∏—á–Ω–∞.  \n"
            "–ù–∞—á–∞–ª–æ: [–≤—Ä–µ–º—è –ø–æ –†–∏–≥–µ], –æ–∫–æ–Ω—á–∞–Ω–∏–µ: ~[–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è]  \n"
            "‚è≥ –î–æ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å  \n"
            "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: ‚Ç¨[—Å—É–º–º–∞], [–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞]  \n"
            "–¢–µ–≥: #[safe]/#[value]/#[sharp]/#[wildcard]\n\n"
            "‚ùóÔ∏è–¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –ª–∏–Ω–∏–∏. –ë–µ–∑ –≤–≤–æ–¥–Ω–æ–≥–æ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ ‚Äî —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π —Å–ø–∏—Å–æ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."
        )
    else:
        text = (
            "–Ø —Ä–∞–∑–±–∏—Ä–∞—é—Å—å —Ç–æ–ª—å–∫–æ –≤ —Ñ—É—Ç–±–æ–ª–µ, —Ö–æ–∫–∫–µ–µ –∏ CS2.\n\n"
            f"–ù–∞–π–¥–∏ 1‚Äì3 –ª–æ–≥–∏—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ (#value, #sharp –∏–ª–∏ #wildcard) –Ω–∞:\n"
            f" ‚Ä¢ –≤–µ—á–µ—Ä —Å–µ–≥–æ–¥–Ω—è ({today}),\n"
            " ‚Ä¢ –∏ —É—Ç—Ä–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è (–¥–æ 09:00 –ø–æ –†–∏–≥–µ).\n\n"
            "–ò—â–∏ –ø–æ –≤—Å–µ–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º: CS2, —Ñ—É—Ç–±–æ–ª, —Ö–æ–∫–∫–µ–π, —Ç–µ–Ω–Ω–∏—Å, –±–∞—Å–∫–µ—Ç–±–æ–ª, –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å, –≤–æ–ª–µ–π–±–æ–ª, –≥–∞–Ω–¥–±–æ–ª, Dota, LoL, Valorant –∏ –¥—Ä—É–≥–∏–º. –ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Å—è –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ª–∏–≥–∞–º–∏ ‚Äî –∏—â–∏ value –≤–µ–∑–¥–µ.\n\n"
            "–Ø –¥–æ–≤–µ—Ä—è—é —Å–∏—Å—Ç–µ–º–µ. –ì–æ—Ç–æ–≤ —Å—Ç–∞–≤–∏—Ç—å –¥–∞–∂–µ –Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —Ä–∞–∑–±–∏—Ä–∞—é—Å—å, –µ—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∞ –∏ –∏–º–µ–µ—Ç value.\n\n"
            "–¶–µ–ª—å: –≤—ã—Ä–∞—Å—Ç–∏—Ç—å –±–∞–Ω–∫ –¥–æ ‚Ç¨800.\n"
            "–ú–æ–≥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ 70% –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –±–∞–Ω–∫–∞, –µ—Å–ª–∏ —Å—Ç–∞–≤–∫–∏ –ª–æ–≥–∏—á–Ω—ã.\n\n"
            "–ë–∞–Ω–∫:\n"
            f" ‚Ä¢ Optibet: ‚Ç¨{banks.get('optibet',0):.2f}\n"
            f" ‚Ä¢ Olybet:  ‚Ç¨{banks.get('olybet',0):.2f}\n\n"
            "–§–æ—Ä–º–∞—Ç –∫–∞–∂–¥–æ–π —Å—Ç–∞–≤–∫–∏:\n"
            "–ö–æ–º–∞–Ω–¥–∞1 vs –ö–æ–º–∞–Ω–¥–∞2 ‚Äì –∏—Å—Ö–æ–¥ @–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç  \n"
            "–ö—Ä–∞—Ç–∫–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É —Å—Ç–∞–≤–∫–∞ –ª–æ–≥–∏—á–Ω–∞.  \n"
            "–ù–∞—á–∞–ª–æ: [–≤—Ä–µ–º—è –ø–æ –†–∏–≥–µ], –æ–∫–æ–Ω—á–∞–Ω–∏–µ: ~[–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è]  \n"
            "‚è≥ –î–æ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å  \n"
            "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: ‚Ç¨[—Å—É–º–º–∞], [–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞]  \n"
            "–¢–µ–≥: #[value]/#[sharp]/#[wildcard]\n\n"
            "‚ùóÔ∏è–¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –ª–∏–Ω–∏–∏. –ë–µ–∑ –≤–≤–æ–¥–Ω–æ–≥–æ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ ‚Äî —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π —Å–ø–∏—Å–æ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."
        )
    await query.message.reply_text(text)
